/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';


export namespace Components {

  interface SpiCandidat {}
  interface SpiCandidatAttributes extends StencilHTMLAttributes {}

  interface AjouterEnseignant {
    'home': RouterHistory;
  }
  interface AjouterEnseignantAttributes extends StencilHTMLAttributes {
    'home'?: RouterHistory;
  }

  interface AllEnseignant {
    'home': RouterHistory;
    'match': MatchResults;
  }
  interface AllEnseignantAttributes extends StencilHTMLAttributes {
    'home'?: RouterHistory;
    'match'?: MatchResults;
  }

  interface AppFetch {
    'load': () => void;
    'name': string;
  }
  interface AppFetchAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface SpiAllens {
    'load': () => void;
    'name': string;
  }
  interface SpiAllensAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface SpiEnseignant {}
  interface SpiEnseignantAttributes extends StencilHTMLAttributes {}

  interface SupprimerEnseignant {
    'match': MatchResults;
  }
  interface SupprimerEnseignantAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface XModal {
    'title': string;
    'visible': boolean;
  }
  interface XModalAttributes extends StencilHTMLAttributes {
    'onCancel'?: (event: CustomEvent) => void;
    'onOk'?: (event: CustomEvent) => void;
    'title'?: string;
    'visible'?: boolean;
  }

  interface SpiHeader {}
  interface SpiHeaderAttributes extends StencilHTMLAttributes {}

  interface SpiHome {}
  interface SpiHomeAttributes extends StencilHTMLAttributes {}

  interface SpiRoot {}
  interface SpiRootAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'SpiCandidat': Components.SpiCandidat;
    'AjouterEnseignant': Components.AjouterEnseignant;
    'AllEnseignant': Components.AllEnseignant;
    'AppFetch': Components.AppFetch;
    'SpiAllens': Components.SpiAllens;
    'SpiEnseignant': Components.SpiEnseignant;
    'SupprimerEnseignant': Components.SupprimerEnseignant;
    'XModal': Components.XModal;
    'SpiHeader': Components.SpiHeader;
    'SpiHome': Components.SpiHome;
    'SpiRoot': Components.SpiRoot;
  }

  interface StencilIntrinsicElements {
    'spi-candidat': Components.SpiCandidatAttributes;
    'ajouter-enseignant': Components.AjouterEnseignantAttributes;
    'all-enseignant': Components.AllEnseignantAttributes;
    'app-fetch': Components.AppFetchAttributes;
    'spi-allens': Components.SpiAllensAttributes;
    'spi-enseignant': Components.SpiEnseignantAttributes;
    'supprimer-enseignant': Components.SupprimerEnseignantAttributes;
    'x-modal': Components.XModalAttributes;
    'spi-header': Components.SpiHeaderAttributes;
    'spi-home': Components.SpiHomeAttributes;
    'spi-root': Components.SpiRootAttributes;
  }


  interface HTMLSpiCandidatElement extends Components.SpiCandidat, HTMLStencilElement {}
  var HTMLSpiCandidatElement: {
    prototype: HTMLSpiCandidatElement;
    new (): HTMLSpiCandidatElement;
  };

  interface HTMLAjouterEnseignantElement extends Components.AjouterEnseignant, HTMLStencilElement {}
  var HTMLAjouterEnseignantElement: {
    prototype: HTMLAjouterEnseignantElement;
    new (): HTMLAjouterEnseignantElement;
  };

  interface HTMLAllEnseignantElement extends Components.AllEnseignant, HTMLStencilElement {}
  var HTMLAllEnseignantElement: {
    prototype: HTMLAllEnseignantElement;
    new (): HTMLAllEnseignantElement;
  };

  interface HTMLAppFetchElement extends Components.AppFetch, HTMLStencilElement {}
  var HTMLAppFetchElement: {
    prototype: HTMLAppFetchElement;
    new (): HTMLAppFetchElement;
  };

  interface HTMLSpiAllensElement extends Components.SpiAllens, HTMLStencilElement {}
  var HTMLSpiAllensElement: {
    prototype: HTMLSpiAllensElement;
    new (): HTMLSpiAllensElement;
  };

  interface HTMLSpiEnseignantElement extends Components.SpiEnseignant, HTMLStencilElement {}
  var HTMLSpiEnseignantElement: {
    prototype: HTMLSpiEnseignantElement;
    new (): HTMLSpiEnseignantElement;
  };

  interface HTMLSupprimerEnseignantElement extends Components.SupprimerEnseignant, HTMLStencilElement {}
  var HTMLSupprimerEnseignantElement: {
    prototype: HTMLSupprimerEnseignantElement;
    new (): HTMLSupprimerEnseignantElement;
  };

  interface HTMLXModalElement extends Components.XModal, HTMLStencilElement {}
  var HTMLXModalElement: {
    prototype: HTMLXModalElement;
    new (): HTMLXModalElement;
  };

  interface HTMLSpiHeaderElement extends Components.SpiHeader, HTMLStencilElement {}
  var HTMLSpiHeaderElement: {
    prototype: HTMLSpiHeaderElement;
    new (): HTMLSpiHeaderElement;
  };

  interface HTMLSpiHomeElement extends Components.SpiHome, HTMLStencilElement {}
  var HTMLSpiHomeElement: {
    prototype: HTMLSpiHomeElement;
    new (): HTMLSpiHomeElement;
  };

  interface HTMLSpiRootElement extends Components.SpiRoot, HTMLStencilElement {}
  var HTMLSpiRootElement: {
    prototype: HTMLSpiRootElement;
    new (): HTMLSpiRootElement;
  };

  interface HTMLElementTagNameMap {
    'spi-candidat': HTMLSpiCandidatElement
    'ajouter-enseignant': HTMLAjouterEnseignantElement
    'all-enseignant': HTMLAllEnseignantElement
    'app-fetch': HTMLAppFetchElement
    'spi-allens': HTMLSpiAllensElement
    'spi-enseignant': HTMLSpiEnseignantElement
    'supprimer-enseignant': HTMLSupprimerEnseignantElement
    'x-modal': HTMLXModalElement
    'spi-header': HTMLSpiHeaderElement
    'spi-home': HTMLSpiHomeElement
    'spi-root': HTMLSpiRootElement
  }

  interface ElementTagNameMap {
    'spi-candidat': HTMLSpiCandidatElement;
    'ajouter-enseignant': HTMLAjouterEnseignantElement;
    'all-enseignant': HTMLAllEnseignantElement;
    'app-fetch': HTMLAppFetchElement;
    'spi-allens': HTMLSpiAllensElement;
    'spi-enseignant': HTMLSpiEnseignantElement;
    'supprimer-enseignant': HTMLSupprimerEnseignantElement;
    'x-modal': HTMLXModalElement;
    'spi-header': HTMLSpiHeaderElement;
    'spi-home': HTMLSpiHomeElement;
    'spi-root': HTMLSpiRootElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
